#Importing Data
#dir() in order to see the list of files in the directory.
dir()

#Using "swimming_pools.csv"
pools <- read.csv("swimming_pools.csv")
str(pools)

#Strings are treated as characters so we need to use stringsAsFactors = FALSE
pools <- read.csv("swimming_pools.csv", stringsAsFactors = FALSE)
str(pools)

#Importing text files .txt - read.delim() has a separator of "\t"(tab) and "header = TRUE" (first row is the variables name)
hotdogs <- read.delim("hotdogs.txt", header = FALSE)
summary(hotdogs)

#For more exotic data we use the read.table()
path <- file.path("data", "hotdogs.txt")
hotdogs <- read.table("path", sep = "", col.names = c("types", "calories", "sodium"))
head(hotdogs)

#Selecting certain data
hotdogs <- read.delim("hotdogs.txt", header = FALSE, col.names = c("types", "calories", "sodium"))
lily <- hotdogs[which.min(hotdogs$calories), ]
tom <- hotdogs[which.max(hotdogs$sodium), ]

#There we can also select the colClasses
hotdogs2 <- read.delim("hotdogs.txt", header = FALSE, col.names = c("types", "calories", "sodium"), colClasses = c("factor", "NULL", "numeric"))
str(hotdogs2)

#readr package is more simplier and powerful than utils package.
#read.table() = read_delim() ; read.csv() = read_csv() ; read.delim() = read_tsv() "tsv = tab separeted values"
install.packages("readr")
library(readr)
potatoes <- read_csv("potatoes.csv")

#Using read_tsv()
properties <- c("area", "temp", "size", "storage", "method", "texture", "flavor", "moistness")
potatoes <- read_tsv("potates.txt", col_names = properties)
head(potatoes)

#Using read_delim() we can use "col_names = FALSE" "col_types = cdil_" (c = character, d = double, i = integer, l = logical, _ = skip)
properties <- c("area", "temp", "size", "storage", "method", "texture", "flavor", "moistness")
potatoes <- read_delim("potates.txt", delim = "\t", col_names = properties)
potatoes

#Using read_delim() with skip (skips data form the start) and n_max (shows the amount of lines to import)
potatoes_fragment <- read_delim("potates.txt", delim = "\t", skip = 6, n_max = 5, col_names = properties)
potatoes_fragment

#treating all variables as characters
potatoes_char <- read_tsv("potatoes.txt", col_types = "cccccccc", col_names = properties)

#col_types with collectors this collectors should be used in a list()
hotdogs <- read_tsv("hotdogs.txt", col_names = c("type", "calories", "sodium"))
fac <- col_factors(levels = c("Beef", "Meat", "Poultry"))
int <- col_integer()
hotdogs_factor <- read_tsv("hotdogs.txt", col_names = c("type", "calories", "sodium"), col_types = list(fac, int, int))
summary(hotdogs_factor)

#data.table package
install.packages("data.table")
library(data.table)
potatoes <- fread("potatoes.csv")

#Selecting and droping select = c(1, 3,..) drop = c(2, 4, ...)
potatoes <- fread("potatoes.csv", select = c(6, 8))
plot(potatoes$texture, potatoes$moistness)

#Importing Excel Data. readxl package. excel_sheets() list different sheets; and read_excel() actually import data into R.
install.packages("readxl")
library(readxl)

#excel_sheets() lets you know what sheets are in the file. But it does not imported anything yet.
excel_sheets("urbanpop.xlsx")

#importing an excel sheet.
pop_1 <- read_excel("urbanpop.xlsx", sheet = 1)
pop_2 <- read_excel("urbanpop.xlsx", sheet = 2)
pop_3 <- read_excel("urbanpop.xlsx", sheet = 3)

pop_list <- list(pop_1, pop_2, pop_3)

#Using lapply() for calling multiple sheets
pop_list <- lapply(excel_sheets("urbanpop.xlsx"), read_excel, path = "urbanpop.xlsx")

#Other characteristics of read_excel() you can use col_names = TRUE or FALSE, COl_types =c("text", "date", "numeric", "blank(it ignores this column")
#paste0("year_", 1960:1966) its a shortcut to specify year_1960, year_1961.... year_1966
pop_a <- read_excel("urbanpop_nonames.xlsx", sheet = 1, col_names = FALSE)
cols <- c("country", paste0("year_", 1960:1966)) 
pop_b <- read_excel("urbanpop_nonames.xlsx", sheet = 1, col_names = cols)

#Using skip = a number of rows we want R to drop from the excel sheet.
urbanpop_sel <- read_excel("urbanpop.xlsx", sheet = 2, col_names = FALSE, skip = 21)
urbanpop_sel[1, ]

#gdata package
install.packages("gdata")
library(gdata)
read.xls("cities.xls")
urban_pop <- read.xls("urbanpop.xls", sheet = 2)
head(urban_pop, n = 11)

#all the options available in the utils package can run in the read.xls
urban_pop <- read.xls("urbanpop.xls", sheet = 2, skip = 50, header = FALSE, stringsAsFactors = FALSE, col_names = cols)

#Using cbind() to add the sheets together, na.omit() removes all rows with NA
path <- "urbanpop.xls"
urban_sheet1 <- read.xls(path, sheet = 1, stringsAsFactors = FALSE)
urban_sheet2 <- read.xls(path, sheet = 2, stringsAsFactors = FALSE)
urban_sheet3 <- read.xls(path, sheet = 3, stringsAsFactors =FALSE)

urban <- cbind(urban_sheet1, urban_sheet2[-1], urban_sheet3[-1])
urban_clean <- na.omit(urban)

#XLConnect package lets you work in R with excel data and then return it to excel.
install.packages("XLConnect")
library(XLConnect)
#loadWorkbook() and getSheets() = to excel_sheets(), readWorksheet()
my_book <- loadWorkbook("urbanpop.xlsx")
getSheets(my_book)
readWorksheet(my_book, sheet = 2)

#Selecting columns
urbanpop_sel <- readWorksheet(my_book, sheet = 2, startCol = 3, endCol = 5)
countries <- readWorksheet(my_book, sheet = 2, startCol = 1, endCol = 1)
selection <- cbind(countries, urbanpop_sel)
selection

#Create a spreadsheet in R. createSheet(my_book, "data_summary")
my_book <- loadWorkbook("urbanpop.xlsx")
createSheet(my_book, "data_summary")
getSheets(my_book)

#Saving a spreadsheet in R as a xlsx document.
sheets <- getSheets(my_book)[1:3]
dims <- sapply(sheets, function(x) dim(readWorksheet(my_book, sheet = x)), USE.NAMES = FALSE)
summ <- data.frame(sheets = sheets, nrows = dims[1, ], ncols = dims[2, ])
saveWorkbook(my_book, "summary.xlsx")

#renaming a sheet
renameSheet(my_book, sheet = 4, "summary.xlsx")
getSheets(my_book)
saveWorkbook(my_book, "renamed.xlsx")

#deleting a sheet
my_book <- loadWorkbook("renamed.xlsx")
getSheets(my_book)
removeSheet(my_book, "summary")
saveWorkbook(my_book, "clean.xlsx")